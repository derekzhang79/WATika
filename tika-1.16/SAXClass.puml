@startuml
title
<u>tika content handler class</u>
end title
interface EntityResolver
interface DTDHandler
interface ContentHandler
interface ErrorHandler

package org.xml.sax.helpers{
class DefaultHandler
}
EntityResolver <|-left- DefaultHandler
DTDHandler <|-left- DefaultHandler
ContentHandler <|-right- DefaultHandler
ErrorHandler <|-right- DefaultHandler
class DefaultHandler{
resolveEntity():InputSource
notationDecl():V
unparsedEntityDecl():V
setDocumentLocator():V
startDocument():V
endDocument():V
startPrefixMapping():V
endPrefixMapping:V
startElement():V
endElement():V
characters():V
ignorableWhitespace():V
processingInstruction():V
skippedEntity():V
warning():V
error():V
fatalError():V
}

ContentHandlerDecorator -down-|> DefaultHandler
class ContentHandlerDecorator{
private ContentHandler handler
--
protected setContentHandler():V
protected handleException():throw exception
--
toString():return handler.toString()
}
interface ContentHandlerFactory
BasicContentHandlerFactory -up-|> ContentHandlerFactory
interface ContentHandlerFactory{
public ContentHandler \ngetNewContentHandler()
}
class BasicContentHandlerFactory{
--public--
 enum HANDLER_TYPE (
        BODY,
        IGNORE, //don't store content
        TEXT,
        HTML,
        XML)
ContentHandler getNewContentHandler():return typeHandler
HANDLER_TYPE getType():return type
static HANDLER_TYPE parseHandlerType():return type
--privatet final--
HANDLER_TYPE type
int writeLimit
--
}

BodyContentHandler -up-|> ContentHandlerDecorator
class BodyContentHandler{
--private--
static final XPathParser PARSER
static final Matcher MATCHER
--public--
BodyContentHandler(ContentHandler handler):\nsuper(new MatchingContentHandler(handler, MATCHER))

}
class CleanPhoneText{
--static--
final String cleanPhoneRegex
final String phoneRegex
--public--
static ArrayList<String> extractPhoneNumbers():return \n    phoneNumbers
static String clean():return text
static final String[][][] cleanSubstitutions
}

DIFContentHandler -up-|> DefaultHandler
class DIFContentHandler{
--private--
 static final char[] NEWLINE
 static final char[] TABSPACE
 static final Attributes EMPTY_ATTRIBUTES
 Stack<String> treeStack
Stack<String> dataStack;
final ContentHandler delegate;
boolean isLeaf;
Metadata metadata;
--public--
toString():return handler.toString()
}

ElementMappingContentHandler --|> ContentHandlerDecorator
class ElementMappingContentHandler{
--private--
final Map<QName, TargetElement> mappings
--protected--
static final String getQNameAsString()
--public--
static class TargetElement
--@override--
startElement()
endElement()
}

EmbeddedContentHandler -right-|> ContentHandlerDecorator
class EmbeddedContentHandler{
--@Override--
startDocument()
endDocument()
}

EndDocumentShieldingContentHandler--|> ContentHandlerDecorator
class EndDocumentShieldingContentHandler{
--private--
boolean endDocumentCalled
--public--
boolean getEndDocumentWasCalled():\n   return endDocumentCalled
reallyEndDocument():V
--@override--
endDocument()
}

ExpandedTitleContentHandler --|> ContentHandlerDecorator
class ExpandedTitleContentHandler{
--private--
boolean isTitleTagOpen
static final String TITLE_TAG
--@override--
startDocument()
startElement()
endElement()
characters()
}

LinkContentHandler -up-|> DefaultHandler
class LinkContentHandler{
--private--
final LinkedList<LinkBuilder> builderStack
final List<Link> links
boolean collapseWhitespaceInAnchor
--public--
List<Link> getLinks():return links
--@override--
startElement()
characters()
ignorableWhitespace()
endElement()
}

OfflineContentHandler -right-|> ContentHandlerDecorator
class OfflineContentHandler{
--@override--
InputSource resolveEntity:\n    return new InputSource()
}

PhoneExtractingContentHandler --|> ContentHandlerDecorator
class PhoneExtractingContentHandler{
--private--
Metadata metadata
static final String PHONE_NUMBERS
StringBuilder stringBuilder
--@override--
characters()
endDocument()
}

RichTextContentHandler -left-|> WriteOutContentHandler
WriteOutContentHandler -left-|> ContentHandlerDecorator
class RichTextContentHandler{
--@override--
startElement()
}
class WriteOutContentHandler {
--private--
final int writeLimit
int writeCount = 0
static class WriteLimitReachedException
--public--
boolean isWriteLimitReached
--@override--
characters()ignorableWhitespace()
}

SafeContentHandler -up-|> ContentHandlerDecorator
class SafeContentHandler{
--private--
static final char[] REPLACEMENT
static class StringOutput implements Output
final Output charactersOutput
final Output ignorableWhitespaceOutput
filter():V
boolean isInvalid()
--protected--
interface Output:void write(char[] ch, int start, int length) \nthrows SAXException
boolean isInvalid
writeReplacement()
--@override--
startElement()
endElement()
endDocument()
characters()
ignorableWhitespace()
}

SecureContentHandler -up-|> ContentHandlerDecorator
class SecureContentHandler{
--private--
final TikaInputStream stream
advance()
getByteCount()
class SecureSAXException
--public--
throwIfCauseOf():throw new TikaException
--@override--
ignorableWhitespace()
characters()
endElement()
startElement()
}

TaggedContentHandler -down-|> ContentHandlerDecorator
class TaggedContentHandler{
--public--
boolean isCauseOf()
throwIfCauseOf():V
--@Override--
handleException():throw\n    new TaggedSAXException()
}

TeeContentHandler -up-|> DefaultHandler
class TeeContentHandler{
--private--
final ContentHandler[] handlers
--@override--
startPrefixMapping():V
endPrefixMapping():V
processingInstruction():V
setDocumentLocator():V
startDocument():V
endDocument():V
startElement():V
endElement():V
characters():V
ignorableWhitespace():V
skippedEntity():V
}

TextContentHandler -up-|> DefaultHandler
class TextContentHandler{
--private--
static final char[] SPACE
final ContentHandler delegate
final boolean addSpaceBetweenElements
--@override--
setDocumentLocator():V
characters():V
ignorableWhitespace():V
startElement():V
startDocument():V
endDocument():V
String toString():return handler.toString()
}

ToTextContentHandler-right-|>DefaultHandler
class ToTextContentHandler{
--private--
final Writer writer
--@override--
characters():V
ignorableWhitespace():V
endDocument():V
String toString():return handler.toString()
}

ToXMLContentHandler -down-|> ToTextContentHandler
class ToXMLContentHandler{
--private--
static class ElementInfo
final String encoding
ElementInfo currentElement
int writeCharsAndEntity()):V
writeEscaped(
--protected--
boolean inStartElement = false
final Map<String, String> namespaces
write():V
--@override--
startDocument():V
startPrefixMapping():V
startElement():V
endElement():V
characters():V
lazyCloseStartElement():V
}

ToHTMLContentHandler -up-|> ToXMLContentHandler
class ToHTMLContentHandler{
--private--
static final Set<String> EMPTY_ELEMENTS
--@override--
startDocument():V
endElement():V
}

XHTMLContentHandler --|> SafeContentHandler
class XHTMLContentHandler{
--private--
static final char[] NL
static Set<String> unmodifiableSet(String... elements)
final Metadata metadata
lazyStartHead():V
lazyEndHead():V
--public--
startElement():V
characters():V
element():V
newLine():V
--@override--
startDocument():V
endDocument():V
startElement():V
endElement():V
characters():V
}

XMPContentHandler --|> SafeContentHandler
class XMPContentHandler{
--private--
static final Attributes EMPTY_ATTRIBUTES
String prefix = null
String uri = null
description():V
--public--
static final String RDF
static final String XMP
startDescription():V
endDescription():V
property():V
metadata():V
--@override--
startDocument():V
endDocument():V
}
@enduml